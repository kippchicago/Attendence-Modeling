rm(list=ls())
source('src//HSR_attrition.R')
source('src//HSR_attrition.R')
HSR.exit
schools<-unique(HSR.exit$SCHOOL_ID)
schools
quote(schools[[1]])
paste(schools[[1]]))
paste(schools[[1]])
lapply(schools, function(x) write.csv(HSR.exit %>% filter(SCHOOL_ID==x), sprintf("reports/HSR_out_%s_%s.csv",format(today(), "%y%m%d"), x), na="")
)
require(dplyr)
lapply(schools, function(x) write.csv(HSR.exit %>% filter(SCHOOL_ID==x), sprintf("reports/HSR_out_%s_%s.csv",format(today(), "%y%m%d"), x), na=""))
HSR.exit %>% filter(SCHOOL_ID==x)
HSR.exit %>% filter(SCHOOL_ID==7810)
x<-7810
sprintf("reports/HSR_out_%s_%s.csv",format(today(), "%y%m%d"), x)
lapply(schools, function(x){
write.csv(HSR.exit %>%
filter(SCHOOL_ID==x),
sprintf("reports/HSR_out_%s_%s.csv",
format(today(), "%y%m%d"),
x),
na="")}
)
cast(HSR.sum[!is.na(EXITCODE)& EXITCODE!="GR"][order(SchoolName, EXITCODE)], Exit_Reason~SchoolName, value="N", margins=c("grand_col", "grand_row"), fun.aggregate=sum)
cast(HSR.sum[!is.na(EXITCODE)][order(SchoolName, EXITCODE)], Exit_Reason~SchoolName, value="N",  margins=c("grand_col", "grand_row"), fun.aggregate=sum)
HSR.exit[,list(sum(!is.na(EXITCODE) & EXITCODE!="GR")/nrow(HSR.exit[EXITCODE!="GR"|is.na(EXITCODE)]))]
HSR.exit[SCHOOL_ID %in% c(7810, 78102),list(sum(!is.na(EXITCODE) & EXITCODE!="GR")/nrow(HSR.exit[EXITCODE!="GR"|is.na(EXITCODE)]))]
HSR.exit[SCHOOL_ID %in% c(7810, 78102))
HSR.exit[SCHOOL_ID %in% c(7810, 78102)]
81/740
HSR.exit[SCHOOL_ID %in% c(78102)]
48/416
HSR.exit[SCHOOL_ID %in% c(7810)]
32/324
map.db<-as.data.frame(read.dcf('config//mapdb.dcf'))
mapsrc<-src_mysql(dbname=as.character(map.db$dbname),
host=as.character(map.db$host),
user=as.character(map.db$user),
password=as.character(map.db$password))
# get viewAllAssessments
map_all<-collect(tbl(mapsrc, "viewAllAssessments"))
setwd("~/Dropbox (KIPP Chicago Schools)/Data Analysis/MAP Analysis/2014-2015")
map.db<-as.data.frame(read.dcf('config//mapdb.dcf'))
mapsrc<-src_mysql(dbname=as.character(map.db$dbname),
host=as.character(map.db$host),
user=as.character(map.db$user),
password=as.character(map.db$password))
# get viewAllAssessments
map_all<-collect(tbl(mapsrc, "viewAllAssessments"))
require(mapvisuals)
map_mv <- mapvizier(map_all)
map_mv$mapData %>% filter(SchoolInitials %in% c("KAPS", KAMS), Year2==2013)
map_mv$mapData %>% filter(SchoolInitials %in% c("KAPS", "KAMS"), Year2==2013)
map_mv$mapData %>%
filter(SchoolInitials %in% c("KAPS", "KAMS"),
Year2==2013,
MeasurementScale %in% c("Reading", "Mathematcis")) %>%
group_by(Grade, MeasurementScale) %>%
summarise(Avg=mean(TestRITScore))
map_mv$mapData %>%
filter(SchoolInitials %in% c("KAPS", "KAMS"),
Year2==2013,
MeasurementScale %in% c("Reading", "Mathematcis"),
Season=="Spring") %>%
group_by(Grade, MeasurementScale) %>%
summarise(Avg=mean(TestRITScore))
MeasurementScale %in% c("Reading", "Mathematics"),
MeasurementScale %in% c("Reading", "Mathematics"),
map_mv$mapData %>%
filter(SchoolInitials %in% c("KAPS", "KAMS"),
Year2==2013,
MeasurementScale %in% c("Reading", "Mathematics"),
Season=="Spring") %>%
group_by(Grade, MeasurementScale) %>%
summarise(Avg=mean(TestRITScore))
arrange(MeasurementScale, Grade)
map_mv$mapData %>%
filter(SchoolInitials %in% c("KAPS", "KAMS"),
Year2==2013,
MeasurementScale %in% c("Reading", "Mathematics"),
Season=="Spring") %>%
group_by(Grade, MeasurementScale) %>%
summarise(Avg=mean(TestRITScore)) %>%
arrange(MeasurementScale, Grade)
map_mv$mapData %>%
filter(SchoolInitials %in% c("KAPS", "KAMS"),
Year2==2013,
MeasurementScale %in% c("Reading", "Mathematics"),
Season=="Spring",
Grade>=2) %>%
group_by(Grade, MeasurementScale) %>%
summarise(Avg=mean(TestRITScore)) %>%
arrange(MeasurementScale, Grade)
map_mv$mapData %>%
filter(SchoolInitials %in% c("KAPS", "KAMS"),
Year2==2013,
MeasurementScale %in% c("Reading", "Mathematics"),
Season=="Spring",
Grade>=2) %>%
group_by(Grade, MeasurementScale) %>%
summarise(n(), Avg=mean(TestRITScore)) %>%
arrange(MeasurementScale, Grade)
cast(HSR.sum[!is.na(EXITCODE)& EXITCODE!="GR"][order(SchoolName, EXITCODE)], Exit_Reason~SchoolName, value="N", margins=c("grand_col", "grand_row"), fun.aggregate=sum)
HSR.exit[,list(sum(!is.na(EXITCODE) & EXITCODE!="GR")/nrow(HSR.exit[EXITCODE!="GR"|is.na(EXITCODE)]))]
HSR.exit[,list(sum(!is.na(EXITCODE) & EXITCODE!="GR" & EXITCODE!="11")/nrow(HSR.exit[EXITCODE!="GR"|is.na(EXITCODE)]))]
map_mv<-mapvizier(map_all)
map.RC.ss<-map_mv$seasonMatched %>%
filter(GrowthSeason=="Spring - Spring" &
Grade.2 %in% c(3,4,6,7,8) )
map.RC.fs<-map_mv$seasonMatched %>%
filter(GrowthSeason=="Fall - Spring" &
Grade.2 %in% c(0,1,2,5) )
rbind(map.RC.ss, map.RC.fs %>% filter(Grade.2==5))
rbind(map.RC.ss, map.RC.fs %>% filter(Grade.2==5))
map_SQRP_summ <- map.SQRP %>% group_by(MeasurementScale, SY) %>%
summarize(N=n(), MetTypical=sum(MetTypical)) %>%
mutate(PctYypcial=MetTypical/N*100)
map.SQRP <- rbind(map.RC.ss, map.RC.fs %>% filter(Grade.2==5))
map.SQRP %>% group_by(MeasurementScale, SY) %>%
summarize(N=n(), MetTypical=sum(MetTypical)) %>%
mutate(PctYypcial=MetTypical/N*100)
map.SQRP %>% group_by(MeasurementScale, SY) %>%
summarize(N=n(), MetTypical=sum(MetTypical)) %>%
mutate(PctYypcial=MetTypical/N*100)
%>% filter(SY=="2013-2014"
map.SQRP %>% group_by(MeasurementScale, SY) %>%
summarize(N=n(), MetTypical=sum(MetTypical)) %>%
mutate(PctYypcial=MetTypical/N*100)
%>% filter(SY=="2013-2014")
map.SQRP
%>% group_by(MeasurementScale, SY)
require(dplyr)
map.SQRP %>% group_by(MeasurementScale, SY)
map.SQRP %>% group_by(MeasurementScale, SY) %>%
summarize(N=n(), MetTypical=sum(MetTypical)) %>%
mutate(PctYypcial=MetTypical/N*100)
%>% filter(SY=="2013-2014")
map.SQRP %>% group_by(MeasurementScale, SY) %>%
summarize(N=n(), MetTypical=sum(MetTypical)) %>%
mutate(PctYypcial=MetTypical/N*100) %>%
filter(SY=="2013-2014",
MeasurementScale=="Reading")
map.SQRP %>% group_by(MeasurementScale, SY, Grade.2) %>%
summarize(N=n(), MetTypical=sum(MetTypical)) %>%
mutate(PctYypcial=MetTypical/N*100) %>%
filter(SY=="2013-2014",
MeasurementScale=="Reading")
map.RC.ss
map.RC.fs %>% filter(Grade.2==5)
rbind(map.RC.ss, map.RC.fs %>% filter(Grade.2==5))
map.SQRP <- rbind(map.RC.ss, map.RC.fs %>% filter(Grade.2==5))
map_SQRP_summ <- map.SQRP %>% group_by(MeasurementScale, SY, Grade.2) %>%
summarize(N=n(), MetTypical=sum(MetTypical))
map_SQRP_summ
map_SQRP_summ <- map.SQRP %>% group_by(MeasurementScale, SY, Grade.2) %>%
summarize(N=n(), MetTypical=sum(MetTypical)) %>%
mutate(PctYypcial=MetTypical/N*100)
map_SQRP_summ <- map.SQRP %>% group_by(MeasurementScale, SY, Grade.2) %>%
summarize(N=n(), MetTypical=sum(MetTypical)) %>%
mutate(PctYypcial=MetTypical/N*100) %>%
filter(SY=="2013-2014",
MeasurementScale=="Reading")
map_SQRP_summ
map_SQRP_summ <- map.SQRP %>% group_by(MeasurementScale, SY, Grade.2) %>%
summarize(N=n(), MetTypical=sum(MetTypical)) %>%
mutate(PctYypcial=MetTypical/N*100) %>%
filter(MeasurementScale=="Reading")
map_SQRP_summ
map.RC.ss<-map_mv$seasonMatched %>%
filter(GrowthSeason=="Spring - Spring" &
Grade.2 %in% c(3,4,6,7,8) )
map.RC.ss
-map_mv$seasonMatched %>%
filter(GrowthSeason=="Spring - Spring" &
Grade.2 %in% c(3,4,6,7,8)
)
map_mv$seasonMatched %>%
filter(GrowthSeason=="Spring - Spring",
Grade.2 %in% c(3,4,6,7,8))
map_mv$seasonMatched %>%
filter(GrowthSeason=="Spring - Spring",
Grade.2 %in% c(3,4,6,7,8)) %>% select(starts_with(Grade), starts_with(SY))
map_mv$seasonMatched %>%
filter(GrowthSeason=="Spring - Spring",
Grade.2 %in% c(3,4,6,7,8)) %>% select(starts_with("Grade"), starts_with("SY"))
map.RC.fs<-map_mv$seasonMatched %>%
filter(GrowthSeason=="Fall - Spring" &
Grade.2 %in% c(0,1,2,5) )
map.RC.ss<-map_mv$seasonMatched %>%
filter(GrowthSeason=="Spring - Spring" &
Grade.2 %in% c(3,4,6,7,8) )
map.RC <- rbind(map.RC.ss, map.RC.fs)
map_RC_summ<-map.RC %>% group_by(MeasurementScale, SY) %>%
summarize(N=n(), MetTypical=sum(MetTypical)) %>%
mutate(PctYypcial=MetTypical/N*100)
map_RC_summ %>% filter(SY.2=="2012-2013")
map_RC_summ<-map.RC %>% group_by(MeasurementScale, SY.2) %>%
summarize(N=n(), MetTypical=sum(MetTypical)) %>%
mutate(PctYypcial=MetTypical/N*100)
map_RC_summ %>% filter(SY.2=="2012-2013")
map.RC.fs<-map_mv$seasonMatched %>%
filter(GrowthSeason=="Fall - Spring" &
Grade.2 %in% c(0,1,2,5) )
map.RC.ss<-map_mv$seasonMatched %>%
filter(GrowthSeason=="Spring - Spring" &
Grade.2 %in% c(3,4,6,7,8) )
map.RC <- rbind(map.RC.ss, map.RC.fs)
map_RC_summ<-map.RC %>% group_by(MeasurementScale, SY.2.2) %>%
summarize(N=n(), MetTypical=sum(MetTypical)) %>%
mutate(PctYypcial=MetTypical/N*100)
map_mv<-mapvizier(map_all)
glimpse(map_mv)
map_RC_summ<-map.RC %>% group_by(MeasurementScale, SY.2) %>%
summarize(N=n(), MetTypical=sum(MetTypical)) %>%
mutate(PctYypcial=MetTypical/N*100)
map_RC_summ %>% filter(SY.2.2=="2012-2013")
map_RC_summ %>% filter(SY.2=="2012-2013")
map_RC_summ %>% filter(SY.2=="2013-2014")
map.RC2.fs<-map_mv$seasonMatched %>%
filter(GrowthSeason=="Fall - Spring" &
Grade.2 %in% c(0,2,5) )
map.RC2.ss<-map_mv$seasonMatched %>%
filter(GrowthSeason=="Spring - Spring" &
Grade.2 %in% c(1,3,4,6,7,8) )
map.RC2 <- rbind(map.RC2.ss, map.RC2.fs)
map_RC2_summ<-map.RC2 %>% group_by(MeasurementScale, SY.2) %>%
summarize(N=n(), MetTypical=sum(MetTypical)) %>%
mutate(PctYypcial=MetTypical/N*100)
map_RC2_summ %>% filter(SY.2=="2012-2013")
map_RC2_summ %>% filter(SY.2=="2013-2014")
map_ss_less_5_Summ <- map.RC.ss %>% group_by(MeasurementScale, SY.2) %>%
summarize(N=n(), MetTypical=sum(MetTypical)) %>%
mutate(PctYypcial=MetTypical/N*100)
map_RC_summ %>% filter(SY.2=="2013-2014")
map_RC_summ %>% filter(SY.2=="2012-2013")
map.SQRP <- rbind(map.RC.ss, map.RC.fs %>% filter(Grade.2==5))
map_SQRP_summ <- map.SQRP %>% group_by(MeasurementScale, SY.2, Grade.2) %>%
summarize(N=n(), MetTypical=sum(MetTypical)) %>%
mutate(PctYypcial=MetTypical/N*100) %>%
filter(MeasurementScale=="Reading")
map_SQRP_summ <- map.SQRP %>% group_by(MeasurementScale, SY.2) %>%
summarize(N=n(), MetTypical=sum(MetTypical)) %>%
mutate(PctYypcial=MetTypical/N*100) %>%
filter(MeasurementScale=="Reading")
map_SQRP_summ <- map.SQRP %>% group_by(MeasurementScale, SY.2) %>%
summarize(N=n(), MetTypical=sum(MetTypical)) %>%
mutate(PctYypcial=MetTypical/N*100)
map_SQRP_summ %>% filter(SY.2=="2013-2014")
map_SQRP_summ %>% filter(SY.2=="2012-2013")
map.RC.ss<-map_mv$seasonMatched %>%
filter(GrowthSeason=="Spring - Spring" &
Grade.2 %in% c(3,4,6,7,8) )
map.RC.ss %>% group_by(MeasurementScale, SY.2, Grade.2) %>%
summarize(N=n(), MetTypical=sum(MetTypical)) %>%
mutate(PctYypcial=MetTypical/N*100)
map.RC.ss %>% group_by(MeasurementScale, SY.2, Grade.2) %>%
summarize(N=n(), MetTypical=sum(MetTypical)) %>%
mutate(PctYypcial=MetTypical/N*100) %>%
filter(filter(SY.2=="2013-2014",
MeasurementScale=="Reading")
map.RC.ss %>% group_by(MeasurementScale, SY.2, Grade.2) %>%
summarize(N=n(), MetTypical=sum(MetTypical)) %>%
mutate(PctYypcial=MetTypical/N*100) %>%
filter(filter(SY.2=="2013-2014",
MeasurementScale=="Reading")
map.RC.ss %>% group_by(MeasurementScale, SY.2, Grade.2) %>%
summarize(N=n(), MetTypical=sum(MetTypical)) %>%
mutate(PctYypcial=MetTypical/N*100) %>%
filter(SY.2=="2013-2014",
MeasurementScale=="Reading")
map_ss_less_5_Summ <- map.RC.ss %>% group_by(MeasurementScale, SY.2) %>%
summarize(N=n(), MetTypical=sum(MetTypical)) %>%
mutate(PctTypcial=MetTypical/N*100) %>%
filter(SY.2=="2013-2014",
MeasurementScale=="Reading")
map.RC.ss %>% group_by(MeasurementScale, SY.2) %>%
summarize(N=n(), MetTypical=sum(MetTypical)) %>%
mutate(PctTypcial=MetTypical/N*100) %>%
filter(SY.2=="2013-2014",
MeasurementScale=="Reading")
map_ss_less_5_Summ <- map.RC.ss %>% group_by(MeasurementScale, SY.2) %>%
summarize(N=n(), MetTypical=sum(MetTypical)) %>%
mutate(PctTypcial=MetTypical/N*100)
map_ss_less_5_Summ %>% filter(SY.2=="2012-2013")
map_ss_less_5_Summ %>% filter(SY.2=="2013-2014")
map.RC.ss %>% group_by(MeasurementScale, SY.2) %>%
summarize(N=n(), MetTypical=sum(MetTypical)) %>%
mutate(PctTypcial=MetTypical/N*100)
map_ss_less_5_Summ <- map.RC.ss %>% group_by(MeasurementScale, SY.2) %>%
summarize(N=n(), MetTypical=sum(MetTypical)) %>%
mutate(PctTypcial=MetTypical/N*100)
map_ss_less_5_Summ %>% filter(SY.2=="2012-2013")
map_ss_less_5_Summ %>% filter(SY.2=="2013-2014")
map.RC.fs<-map_mv$seasonMatched %>%
filter(GrowthSeason=="Fall - Spring" &
Grade.2 %in% c(0,1,2,5) )
map.RC.ss<-map_mv$seasonMatched %>%
filter(GrowthSeason=="Spring - Spring" &
Grade.2 %in% c(3,4,6,7,8) )
map_RC_summ<-map.RC %>% group_by(MeasurementScale, SY.2) %>%
summarize(N=n(), MetTypical=sum(MetTypical)) %>%
mutate(PctYypcial=MetTypical/N*100)
map_RC_summ %>% filter(SY.2=="2012-2013")
map_RC_summ %>% filter(SY.2=="2013-2014")
map.RC2.fs<-map_mv$seasonMatched %>%
filter(GrowthSeason=="Fall - Spring" &
Grade.2 %in% c(0,2,5) )
map.RC2.ss<-map_mv$seasonMatched %>%
filter(GrowthSeason=="Spring - Spring" &
Grade.2 %in% c(1,3,4,6,7,8) )
map.RC2 <- rbind(map.RC2.ss, map.RC2.fs)
map_RC2_summ<-map.RC2 %>% group_by(MeasurementScale, SY.2) %>%
summarize(N=n(), MetTypical=sum(MetTypical)) %>%
mutate(PctYypcial=MetTypical/N*100)
map_RC2_summ %>% filter(SY.2=="2012-2013")
map_RC2_summ %>% filter(SY.2=="2013-2014")
map_ss_less_5_Summ <- map.RC.ss %>% group_by(MeasurementScale, SY.2) %>%
summarize(N=n(), MetTypical=sum(MetTypical)) %>%
mutate(PctTypcial=MetTypical/N*100)
map_ss_less_5_Summ %>% filter(SY.2=="2012-2013")
map_ss_less_5_Summ %>% filter(SY.2=="2013-2014")
map.SQRP <- rbind(map.RC.ss, map.RC.fs %>% filter(Grade.2==5))
map_SQRP_summ <- map.SQRP %>% group_by(MeasurementScale, SY.2) %>%
summarize(N=n(), MetTypical=sum(MetTypical)) %>%
mutate(PctYypcial=MetTypical/N*100)
map_SQRP_summ %>% filter(SY.2=="2012-2013")
map_SQRP_summ %>% filter(SY.2=="2013-2014")
map_kipp <- read.csv("../../HSR/data/Historical_MAP_2014 07 21.csv")
glimpse(map_kipp)
unique(map_kipp$School_Display_Name)
Region_Name
unique(map_kipp$Region_Name)
install.packages("randomForest")
setwd("~/Dropbox (KIPP Chicago Schools)/Data Requests/KIPP Foundation/HSR Data Collection/2014 Fall/HSR_PS_Data_Pull")
rm(list=ls())
source('src//HSR_attrition.R')
rm(list=ls())
source('src//HSR_attrition.R')
source('src//HSR_attrition.R')
rm(list=ls())
source('src//HSR_attrition.R')
rm(list=ls())
source('src//HSR_attrition.R')
source('src//HSR_attrition.R')
rm(list=ls())
source('src//HSR_attrition.R')
source('src//HSR_attrition.R')
source('src//HSR_attrition.R')
unqiue(HSR.exit$RACE_ID)
uniqiue(HSR.exit$RACE_ID)
unique(HSR.exit$RACE_ID)
HSR.data %>% filter(EXITCODE==11)
rm(list=ls())
require(randomForest)
require(mapvisuals)
data(nweadata)
data(nweamap)
require(randomForest)
require(mapvisuals)
data(nweamap)
grade_level_season(nweamap, Season)
map_mv <-mapvizier(nweamap)
glimpse(map_mv)
map<-map_mv$mapData
glimpse(map)
grade_level_season(map$Season)
lapply(map$Season, grade_level_season)
mapply(map$Season, grade_level_season)
map <- map %>%
mutate(gls=mapply(grade_level_season(Season), SIMPLIFY = TRUE),
gls=Grade+gls)
map <- map %>%
mutate(gls=mapply(grade_level_season, Season, SIMPLIFY = TRUE),
gls=Grade+gls)
map %>% select(Grade, Season, gls) %>% head
map %>% select(Grade, Season, gls) %>% head(100)
map %>% select(Grade, Season, gls) %>% tail
sample_stus<-sample(unqiue(map$StudentID), n=100)
sample_stus<-sample(unqiue(map$StudentID), size = 100, replace=FALSE)
sample_stus<-sample(unique(map$StudentID), size = 100, replace=FALSE)
map_sample <- map %>% filter(StudentID %in% sample_stus,
MeasurementScale %in% c("Mathematics", "Reading"))
map_sample
map %>%
filter(gls==8,  MeasurementScale %in% c("Mathematics", "Reading")) %>%
select(StudentID) %>%
unqique
map %>%
filter(gls==8,  MeasurementScale %in% c("Mathematics", "Reading")) %>%
select(StudentID) %>%
unique
sample_stus<-map %>%
filter(gls==8,  MeasurementScale %in% c("Mathematics", "Reading")) %>%
select(StudentID) %>%
unique %>%
sample(., size=25, replace = FALSE)
map %>%
filter(gls==8,  MeasurementScale %in% c("Mathematics", "Reading")) %>%
select(StudentID) %>%
unique
map %>%
filter(gls==8,  MeasurementScale %in% c("Mathematics", "Reading")) %>%
select(StudentID) %>%
unique %>%
sample(size=25, replace = FALSE)
map %>%
filter(gls==8,  MeasurementScale %in% c("Mathematics", "Reading")) %>%
select(StudentID) %>%
unique
map %>%
filter(gls==8,  MeasurementScale %in% c("Mathematics", "Reading")) %>%
select(StudentID) %>%
unique %>% as.vector %>%
sample(size=25, replace = FALSE)
x<-map %>%
filter(gls==8,  MeasurementScale %in% c("Mathematics", "Reading")) %>%
select(StudentID) %>%
uniqu
x<-map %>%
filter(gls==8,  MeasurementScale %in% c("Mathematics", "Reading")) %>%
select(StudentID) %>%
unique
x
sample(x)
sample(x, size = 10)
sample(vector(x), size = 10)
sample(as.vector(x), size = 10)
sample(as.data.frame(x), size = 10)
length(x)
nrow(x)
c(x)
vector(x)
as.vector(x)
as.matrix(x)
as.matrix(x) %>% length
map %>%
filter(gls==8,  MeasurementScale %in% c("Mathematics", "Reading")) %>%
select(StudentID) %>%
unique %>%
as.matrix %>%
sample(size=25, replace = FALSE)
sample_stus <- map %>%
filter(gls==8,
MeasurementScale %in% c("Mathematics", "Reading"),
!is.na(StudentID)) %>%
select(StudentID) %>%
unique %>%
as.matrix %>%
sample(size=25, replace = FALSE)
p_sample <- map %>% filter(StudentID %in% sample_stus,
MeasurementScale %in% c("Mathematics", "Reading"))
map_sample <- map %>% filter(StudentID %in% sample_stus,
MeasurementScale %in% c("Mathematics", "Reading"))
ggplot(map_sample, aes(x=gls, y=TestRITScore)) +
geom_line(aes(group=StudentID), color ="gray70", alpha=.1) +
facet_grid(.~MeasurememntScale)
ggplot(map_sample, aes(x=gls, y=TestRITScore)) +
geom_line(aes(group=StudentID), color ="gray70", alpha=.1)
/
map.db<-as.data.frame(read.dcf('config//mapdb.dcf'))
setwd("~/Dropbox (KIPP Chicago Schools)/Data Analysis/SQRP")
map.db<-as.data.frame(read.dcf('config//mapdb.dcf'))
mapsrc<-src_mysql(dbname=as.character(map.db$dbname),
host=as.character(map.db$host),
user=as.character(map.db$user),
password=as.character(map.db$password))
map_all<-collect(tbl(mapsrc, "viewAllAssessments"))
map_all %>% filter(TermName=="Spring 2012-13", MeasurementScale %in% c("Reading", "Math"))
map_all %>% filter(TermName=="Spring 2012-13", MeasurementScale %in% c("Reading", "Mathematics"))
map_all %>% filter(TermName=="Spring 2012-2013", MeasurementScale %in% c("Reading", "Mathematics"))
map_all %>% filter(TermName=="Spring 2012-2013", MeasurementScale %in% c("Reading", "Mathematics"),  grepl("Ascend", SchoolName))
map_all %>% filter(TermName=="Spring 2012-2013", MeasurementScale %in% c("Reading", "Mathematics"),  grepl("Ascend", SchoolName)) %>% group_by(Grade, MeasurementScale) %>% summarize(Above_50=sum(TestPercentile>=50))
map_all %>% filter(TermName=="Spring 2012-2013", MeasurementScale %in% c("Reading", "Mathematics"),  grepl("Ascend", SchoolName)) %>% group_by(Grade, MeasurementScale) %>% summarize(Above_50=sum(TestPercentile>=50), N=n())
map_all %>% filter(TermName=="Spring 2012-2013", MeasurementScale %in% c("Reading", "Mathematics"),  grepl("Ascend", SchoolName)) %>% group_by(Grade, MeasurementScale) %>% summarize(Above_50=sum(TestPercentile>=50), N=n(), Pct=round(Above_50/N),1)
map_all %>% filter(TermName=="Spring 2012-2013", MeasurementScale %in% c("Reading", "Mathematics"),  grepl("Ascend", SchoolName)) %>% group_by(MeasurementScale, Grade) %>% summarize(Above_50=sum(TestPercentile>=50), N=n(), Pct=round(Above_50/N),1)
map_all %>% filter(TermName=="Spring 2012-2013", MeasurementScale %in% c("Reading", "Mathematics"),  grepl("Ascend", SchoolName)) %>% group_by(MeasurementScale, Grade) %>% summarize(Above_50=sum(TestPercentile>=50), N=n(), Pct=round(Above_50/N*100),1)
map_all %>% filter(TermName=="Spring 2012-2013", MeasurementScale %in% c("Reading", "Mathematics"),  grepl("Ascend", SchoolName)) %>% group_by(MeasurementScale, Grade) %>% summarize(Above_50=sum(TestPercentile>=50), N=n(), Pct=round(Above_50/N*100,1))
map_all %>% filter(TermName=="Spring 2012-2013", MeasurementScale %in% c("Reading", "Mathematics"),  grepl("Ascend", SchoolName)) %>% group_by(MeasurementScale, SchoolName) %>% summarize(Above_50=sum(TestPercentile>=50), N=n(), Pct=round(Above_50/N*100,1))
map_all %>% filter(TermName=="Spring 2013-2014", MeasurementScale %in% c("Reading", "Mathematics"),  grepl("Ascend", SchoolName)) %>% group_by(MeasurementScale, SchoolName) %>% summarize(Above_50=sum(TestPercentile>=50), N=n(), Pct=round(Above_50/N*100,1))
ggplot(map_sample, aes(x=gls, y=TestRITScore)) +
geom_line(aes(group=StudentID), color ="gray70", alpha=.1) +
facet_grid(.~MeasurememntScale) +
theme_bw()
ggplot(map_sample, aes(x=gls, y=TestRITScore)) +
geom_line(aes(group=StudentID), color ="gray70", alpha=.1) +
facet_grid(.~MeasuremementScale) +
theme_bw()
ggplot(map_sample, aes(x=gls, y=TestRITScore)) +
geom_line(aes(group=StudentID), color ="gray70", alpha=.1) +
facet_grid(.~MeasurementScale) +
theme_bw()
ggplot(map_sample, aes(x=gls, y=TestRITScore)) +
geom_line(aes(group=StudentID), color ="gray70", alpha=.7) +
facet_grid(.~MeasurementScale) +
theme_bw()
require(knitr)
ggplot(map_sample, aes(x=gls, y=TestRITScore)) +
geom_line(aes(group=StudentID), color ="gray70", alpha=.5) +
facet_grid(.~MeasurementScale) +
theme_bw()
require(tidyr)
install.packages("tidyr")
version()
Version()
R.version
R.version
install.packages("tidyr")
require(randomForest)
require(mapvisuals)
require(ggplot2)
